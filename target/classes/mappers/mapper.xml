<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.ex.mapper">
<!-- 회원정보 select문 -->
<select id="id" resultType="MemberDto">SELECT * from member</select>
<!--mybatis-confix.xml에서 긴 링크글 MemberDto 로 id는 id라고 지정  -->

<!-- 회원가입 insert문 -->
<insert id="register">INSERT INTO member( mId , mPw , mName, mGender, mPhone, mBirth, mEmail, mAddr, mGrade, mNote, mList, mMile, mCumulmile, mMaster)
	                  VALUES(#{mId} , #{mPw}, #{mName}, #{mGender}, #{mPhone}, #{mBirth}, #{mEmail}, #{mAddr}, "브론즈", null, null, 0, 0, 0)</insert>

<!-- 아이디 중복 체크 -->
<select id="idChk" resultType="int">
	SELECT COUNT(*) FROM member
	WHERE mId = #{mId}
</select>

<!--회원수정 update문 -->
<update id="MemberUpdate">UPDATE member SET mEmail = #{mEmail} ,mName =#{mName},
		mPhone =#{mPhone},mAddr=#{mAddr},mPw=#{mPw}
		 WHERE mId = #{mId} 
</update>

<!-- 로그인 select문 -->
<select id="login" parameterType="MemberDto" resultType="MemberDto">
	select * from member where mId = #{mId} and mPw = #{mPw}
</select>

<!-- 아이디찾기 select문 -->
<select id="mId" resultType="MemberDto">SELECT * from member WHERE mName =#{mName} and mPhone = #{mPhone}</select>

<!-- 비밀번호찾기 select문 -->
<select id="mPw" resultType="MemberDto">SELECT * from member WHERE mId =#{mId} and mName = #{mName} and mEmail=#{mEmail}</select>

<!-- 회원상세 select문 -->
<select id="memberDetail" resultType="MemberDto">SELECT * from member where mId = #{mId} </select>

<!-- 회원탈퇴 delete -->
<delete id="memberdelete"> delete from member where mId = #{mId} and mPw = #{mPw} </delete>

<!-- 상품리스트 select문 -->
<select id="product" resultType="ProductDto">SELECT * from product</select>

<!-- 헬스기구랭킹 select문 -->
<select id="health" resultType="ProductDto">SELECT * from product where pCate = '헬스기구' order by pCountSell DESC</select>

<!-- 요가상품랭킹 select문 -->
<select id="yoga" resultType="ProductDto">SELECT * from product where pCate = '요가상품' order by pCountSell DESC</select>

<!-- 운동식품랭킹 select문 -->
<select id="food" resultType="ProductDto">SELECT * from product where pCate = '운동식품' order by pCountSell DESC</select>

<!-- 남성상품랭킹 select문 -->
<select id="man" resultType="ProductDto">SELECT * from product order by pMan DESC</select>

<!-- 여성상품랭킹 select문 -->
<select id="woman" resultType="ProductDto">SELECT * from product order by pWoman DESC</select>

<!-- 상품정보 select문 -->
<select id="product2" resultType="ProductDto">SELECT * from product where pName = #{pName} </select>

<!-- 상품추가 -->
<insert id="addProduct">
	INSERT INTO product(pNum, pName, pCate, pPrice, pShip, pCount, pCountSell, pCumulSell, pMile, pUrl, pMan, pWoman, pImg)
	values(NEXTVAL(my_seq), #{pName}, #{pCate}, #{pPrice}, #{pShip}, #{pCount}, 0, 0, #{pMile}, #{pUrl}, 0, 0, #{pImg})
</insert>

<!-- 상품수정 -->
<update id="productUpdate">
	UPDATE product SET 
	pName = #{pName}, pPrice = #{pPrice}, pCount = #{pCount}, 
	pShip = #{pShip}, pMile = #{pMile}, pCate = #{pCate} 
	WHERE pUrl = #{pUrl}
</update>

<!-- 재고관리 -->
<update id="productAdd">
	UPDATE product SET 
	pCount = #{pCount} 
	WHERE pName = #{pName}
</update>

<!-- 주문내역 select문 -->
<select id="jumun" resultType="JumunDto">SELECT * from jumun order by jNum DESC</select>

<!-- 주문내역 세션값 select문 -->
<select id="jumun2" resultType="JumunDto">SELECT * from jumun where jNum = #{jNum} </select>

<!-- 장바구니 select문 -->
<select id="basket" resultType="BasketDto">SELECT * from basket</select>

<!-- 장바구니 추가 -->
<insert id="addCart">
	insert into cart(cartNum, mId, pNum, cartStock)
     VALUES (NEXTVAL(cart_seq), #{mId}, #{pNum}, #{cartStock})
</insert>

<!-- 장바구니 리스트 -->
<select id="cartList" resultType="CartListVO">
select
     row_number() over(order by c.cartNum desc) as num,
     c.cartNum, c.mId, c.pNum, c.cartStock, c.addDate,
     g.pName, g.pPrice, g.pUrl
 from cart c
     inner join product g
         on c.pNum = g.pNum  
     where c.mId = #{mId}
</select>

<!-- 고객문의 게시판 목록 select문 -->
<select id="board" resultType="BoardDTO">SELECT * from board order by bNum DESC</select>

<!-- 고객문의 게시판 목록 세션값 select문 -->
<select id="board2" resultType="BoardDTO">SELECT * from board where bNum = #{bNum} </select>

<!-- 고객문의 게시판작성 -->
<insert id="boardWrite">
	insert into board(mName, bNum, bTitle, bNote, bCate, bReply, bUrl, bImg) 
	values(#{mName}, 0, #{bTitle}, #{bNote}, #{bCate}, "답변없음.", #{bUrl}, #{bImg})
</insert>

<!-- 고객문의 게시글 답변 update문 -->
<update id="boardAnswer">UPDATE board SET bReply = #{bReply} WHERE bNum = #{bNum} </update>

<!-- 고객문의 게시글 삭제 delete문 -->
<delete id="boardDelete"> delete from board where bNum = #{bNum} </delete>

<!-- 환불요청 게시판 목록 select문 -->
<select id="refund" resultType="RefundDto">SELECT * from refundboard order by rNum DESC</select>

<!-- 환불요청 게시판 목록 세션값 select문 -->
<select id="refund2" resultType="RefundDto">SELECT * from refundboard where rNum = #{rNum} </select>

<!-- 환불요청 게시판작성 -->
<insert id="refundWrite">
	insert into refundboard(rNum,rName ,rId, rEmail, rPhone, rGrade, rProduct, rUrl,  rNote, rJumunDate,rFinishDate,rCheck) 
	values(0,#{rName} ,#{rId}, #{rEmail}, #{rPhone}, #{rGrade}, #{rProduct}, #{rUrl}, #{rNote}, #{rJumunDate}, #{rFinishDate})
</insert>

<!-- 환불요청 승락시 update문 -->
<update id="RefundUpdate">UPDATE refundboard SET rCheck = 1 WHERE rNum = #{rNum} </update>

<!-- 판매상품 목록 select문 -->
<select id="sell" resultType="SellDto">SELECT * from sell</select>

<!-- 바로구매 -->
<insert id="cash">
	insert into cashon(pName, pCountsSell, pPrice, pShip, pSumPrice)
	values(#{pName}, #{pCountsSell}, #{pPrice}, #{pShip}, #{pPrice} * #{pCountsSell})
</insert>

<!-- 결제하기 -->
<insert id="cashOk">
	insert into cashlist(cNum, mId, mName, pPrice, pCount, pCate, pName, mAddr, mEmail, cMailNum, cName, cPhone)
	values(0, #{mId}, #{mName}, #{pPrice}, #{pCount}, #{pCate}, #{pName}, #{mAddr}, #{mEmail}, #{cMailNum}, #{cName}, #{cPhone} )
</insert>
</mapper>

